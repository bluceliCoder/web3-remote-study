{
	"id": "35e0757fe1e910c3c389eea8d3cd9751",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"level0/task02/classicExample/contracts/Loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract Loop {\n    uint256 public i;\n\n    function loop() public {\n        // for loop\n        for (i = 0; i < 10; i++) {\n            if (i == 3) {\n                // Skip to next iteration with continue\n                continue;\n            }\n            if (i == 5) {\n                // Exit loop with break\n                break;\n            }\n        }\n\n        // while loop\n        uint256 j;\n        while (j < 10) {\n            j++;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"level0/task02/classicExample/contracts/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "i",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"level0/task02/classicExample/contracts/Loop.sol\":58:517  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":58:517  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe5aa3d58\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":101:515  function loop() public {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":78:94  uint256 public i */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":101:515  function loop() public {... */\n    tag_6:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":163:164  0 */\n      0x00\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":159:160  i */\n      dup1\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":159:164  i = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":154:415  for (i = 0; i < 10; i++) {... */\n    tag_12:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":170:172  10 */\n      0x0a\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":166:167  i */\n      sload(0x00)\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":166:172  i < 10 */\n      lt\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":154:415  for (i = 0; i < 10; i++) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":202:203  3 */\n      0x03\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":197:198  i */\n      sload(0x00)\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":197:203  i == 3 */\n      sub\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":193:302  if (i == 3) {... */\n      iszero\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":279:287  continue */\n      tag_14\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":193:302  if (i == 3) {... */\n      jumpi\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":324:325  5 */\n      0x05\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":319:320  i */\n      sload(0x00)\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":319:325  i == 5 */\n      sub\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":315:405  if (i == 5) {... */\n      iszero\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":385:390  break */\n      tag_13\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":315:405  if (i == 5) {... */\n      jumpi\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":154:415  for (i = 0; i < 10; i++) {... */\n    tag_14:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":174:175  i */\n      0x00\n      dup1\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":174:177  i++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":154:415  for (i = 0; i < 10; i++) {... */\n      jump(tag_12)\n    tag_13:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":447:456  uint256 j */\n      0x00\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":466:509  while (j < 10) {... */\n    tag_19:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":477:479  10 */\n      0x0a\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":473:474  j */\n      dup2\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":473:479  j < 10 */\n      lt\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":466:509  while (j < 10) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":495:498  j++ */\n      dup1\n      dup1\n      tag_21\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":466:509  while (j < 10) {... */\n      jump(tag_19)\n    tag_20:\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":124:515  {... */\n      pop\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":101:515  function loop() public {... */\n      jump\t// out\n        /* \"level0/task02/classicExample/contracts/Loop.sol\":78:94  uint256 public i */\n    tag_8:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_22:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_23:\n        /* \"#utility.yul\":177:201   */\n      tag_28\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_30\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_23\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_24:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:861   */\n    tag_18:\n        /* \"#utility.yul\":667:670   */\n      0x00\n        /* \"#utility.yul\":690:714   */\n      tag_33\n        /* \"#utility.yul\":708:713   */\n      dup3\n        /* \"#utility.yul\":690:714   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":681:714   */\n      swap2\n      pop\n        /* \"#utility.yul\":736:802   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":729:734   */\n      dup3\n        /* \"#utility.yul\":726:803   */\n      sub\n        /* \"#utility.yul\":723:826   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":806:824   */\n      tag_35\n      tag_24\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":723:826   */\n    tag_34:\n        /* \"#utility.yul\":853:854   */\n      0x01\n        /* \"#utility.yul\":846:851   */\n      dup3\n        /* \"#utility.yul\":842:855   */\n      add\n        /* \"#utility.yul\":835:855   */\n      swap1\n      pop\n        /* \"#utility.yul\":628:861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d43f117ab55b0307ddbc9627a9f9f097b44b9f247488c7d4edf3dced613f2d8664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101a28061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063a92100cb14610038578063e5aa3d5814610042575b5f80fd5b610040610060565b005b61004a6100c2565b60405161005791906100df565b60405180910390f35b5f80819055505b600a5f5410156100a15760035f5403156100865760055f5403156100a1575b5f8081548092919061009790610125565b9190505550610067565b5f5b600a8110156100bf5780806100b790610125565b9150506100a3565b50565b5f5481565b5f819050919050565b6100d9816100c7565b82525050565b5f6020820190506100f25f8301846100d0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61012f826100c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610161576101606100f8565b5b60018201905091905056fea2646970667358221220d43f117ab55b0307ddbc9627a9f9f097b44b9f247488c7d4edf3dced613f2d8664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE5AA3D58 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA PUSH0 SLOAD LT ISZERO PUSH2 0xA1 JUMPI PUSH1 0x3 PUSH0 SLOAD SUB ISZERO PUSH2 0x86 JUMPI PUSH1 0x5 PUSH0 SLOAD SUB ISZERO PUSH2 0xA1 JUMPI JUMPDEST PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x97 SWAP1 PUSH2 0x125 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x67 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xBF JUMPI DUP1 DUP1 PUSH2 0xB7 SWAP1 PUSH2 0x125 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0xC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F DUP3 PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 EXTCODEHASH GT PUSH27 0xB55B0307DDBC9627A9F9F097B44B9F247488C7D4EDF3DCED613F2D DUP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:459:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@i_3": {
									"entryPoint": 194,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loop_42": {
									"entryPoint": 96,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:864:1",
										"nodeType": "YulBlock",
										"src": "0:864:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "671:190:1",
													"nodeType": "YulBlock",
													"src": "671:190:1",
													"statements": [
														{
															"nativeSrc": "681:33:1",
															"nodeType": "YulAssignment",
															"src": "681:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "708:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "708:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "690:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:17:1"
																},
																"nativeSrc": "690:24:1",
																"nodeType": "YulFunctionCall",
																"src": "690:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "681:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "681:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "804:22:1",
																"nodeType": "YulBlock",
																"src": "804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "806:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "806:16:1"
																			},
																			"nativeSrc": "806:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "806:18:1"
																		},
																		"nativeSrc": "806:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:66:1",
																		"nodeType": "YulLiteral",
																		"src": "736:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "726:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:2:1"
																},
																"nativeSrc": "726:77:1",
																"nodeType": "YulFunctionCall",
																"src": "726:77:1"
															},
															"nativeSrc": "723:103:1",
															"nodeType": "YulIf",
															"src": "723:103:1"
														},
														{
															"nativeSrc": "835:20:1",
															"nodeType": "YulAssignment",
															"src": "835:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "846:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "846:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:1:1",
																		"nodeType": "YulLiteral",
																		"src": "853:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "842:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nativeSrc": "842:13:1",
																"nodeType": "YulFunctionCall",
																"src": "842:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "628:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "657:5:1",
														"nodeType": "YulTypedName",
														"src": "657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "667:3:1",
														"nodeType": "YulTypedName",
														"src": "667:3:1",
														"type": ""
													}
												],
												"src": "628:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063a92100cb14610038578063e5aa3d5814610042575b5f80fd5b610040610060565b005b61004a6100c2565b60405161005791906100df565b60405180910390f35b5f80819055505b600a5f5410156100a15760035f5403156100865760055f5403156100a1575b5f8081548092919061009790610125565b9190505550610067565b5f5b600a8110156100bf5780806100b790610125565b9150506100a3565b50565b5f5481565b5f819050919050565b6100d9816100c7565b82525050565b5f6020820190506100f25f8301846100d0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61012f826100c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610161576101606100f8565b5b60018201905091905056fea2646970667358221220d43f117ab55b0307ddbc9627a9f9f097b44b9f247488c7d4edf3dced613f2d8664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE5AA3D58 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA PUSH0 SLOAD LT ISZERO PUSH2 0xA1 JUMPI PUSH1 0x3 PUSH0 SLOAD SUB ISZERO PUSH2 0x86 JUMPI PUSH1 0x5 PUSH0 SLOAD SUB ISZERO PUSH2 0xA1 JUMPI JUMPDEST PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x97 SWAP1 PUSH2 0x125 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x67 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xBF JUMPI DUP1 DUP1 PUSH2 0xB7 SWAP1 PUSH2 0x125 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0xC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F DUP3 PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 EXTCODEHASH GT PUSH27 0xB55B0307DDBC9627A9F9F097B44B9F247488C7D4EDF3DCED613F2D DUP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:459:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;101:414;;;:::i;:::-;;78:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;101:414;163:1;159;:5;;;;154:261;170:2;166:1;;:6;154:261;;;202:1;197;;:6;193:109;279:8;193:109;324:1;319;;:6;315:90;385:5;315:90;154:261;174:1;;:3;;;;;;;;;:::i;:::-;;;;;;154:261;;;447:9;466:43;477:2;473:1;:6;466:43;;;495:3;;;;;:::i;:::-;;;;466:43;;;124:391;101:414::o;78:16::-;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:233;667:3;690:24;708:5;690:24;:::i;:::-;681:33;;736:66;729:5;726:77;723:103;;806:18;;:::i;:::-;723:103;853:1;846:5;842:13;835:20;;628:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "83600",
								"executionCost": "133",
								"totalCost": "83733"
							},
							"external": {
								"i()": "2424",
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 517,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d43f117ab55b0307ddbc9627a9f9f097b44b9f247488c7d4edf3dced613f2d8664736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "E5AA3D58"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 101,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 101,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 101,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 101,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 78,
											"end": 94,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 78,
											"end": 94,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 101,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 163,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 154,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 166,
											"end": 172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 154,
											"end": 415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 193,
											"end": 302,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 279,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 193,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 315,
											"end": 405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 315,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 154,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 154,
											"end": 415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 154,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 447,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 473,
											"end": 474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 495,
											"end": 498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 495,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 495,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 101,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 94,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 690,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 806,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 846,
											"end": 851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"level0/task02/classicExample/contracts/Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"i()": "e5aa3d58",
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"i\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"level0/task02/classicExample/contracts/Loop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"level0/task02/classicExample/contracts/Loop.sol\":{\"keccak256\":\"0x5b755f6def36b6263e2066e4cfcef4524946af538c58f0f3728dc99748dd58cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f09ae2998af106c87eef9f1b62611eae5941b1b076841e2e2557072de5d78\",\"dweb:/ipfs/QmTPjxQBdafgaXJEvkzgEnEXQU1i23s2gnfs7gmXVYgn5s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "level0/task02/classicExample/contracts/Loop.sol:Loop",
								"label": "i",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"level0/task02/classicExample/contracts/Loop.sol": {
				"ast": {
					"absolutePath": "level0/task02/classicExample/contracts/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							43
						]
					},
					"id": 44,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "Loop",
							"nameLocation": "67:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e5aa3d58",
									"id": 3,
									"mutability": "mutable",
									"name": "i",
									"nameLocation": "93:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "78:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "124:391:0",
										"statements": [
											{
												"body": {
													"id": 28,
													"nodeType": "Block",
													"src": "179:236:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 16,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "197:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 21,
															"nodeType": "IfStatement",
															"src": "193:109:0",
															"trueBody": {
																"id": 20,
																"nodeType": "Block",
																"src": "205:97:0",
																"statements": [
																	{
																		"id": 19,
																		"nodeType": "Continue",
																		"src": "279:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 22,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "319:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "319:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 27,
															"nodeType": "IfStatement",
															"src": "315:90:0",
															"trueBody": {
																"id": 26,
																"nodeType": "Block",
																"src": "327:78:0",
																"statements": [
																	{
																		"id": 25,
																		"nodeType": "Break",
																		"src": "385:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "170:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 29,
												"initializationExpression": {
													"expression": {
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 6,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "159:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "163:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "159:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 9,
													"nodeType": "ExpressionStatement",
													"src": "159:5:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "174:3:0",
														"subExpression": {
															"id": 13,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"nodeType": "ExpressionStatement",
													"src": "174:3:0"
												},
												"nodeType": "ForStatement",
												"src": "154:261:0"
											},
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "455:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 41,
														"src": "447:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"nodeType": "VariableDeclarationStatement",
												"src": "447:9:0"
											},
											{
												"body": {
													"id": 39,
													"nodeType": "Block",
													"src": "481:28:0",
													"statements": [
														{
															"expression": {
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "495:3:0",
																"subExpression": {
																	"id": 36,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "495:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "495:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 33,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "477:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "WhileStatement",
												"src": "466:43:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "110:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:0:0"
									},
									"scope": 43,
									"src": "101:414:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "58:459:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:486:0"
				},
				"id": 0
			}
		}
	}
}