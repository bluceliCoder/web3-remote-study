{
  "_format": "hh3-sol-build-info-1",
  "id": "solc-0_8_28-7a9e7fc72eb16f04ccefec85a28d7a542032e25a",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "userSourceNameMap": {
    "contracts/TodoList.sol": "project/contracts/TodoList.sol"
  },
  "input": {
    "language": "Solidity",
    "settings": {
      "evmVersion": "cancun",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "remappings": []
    },
    "sources": {
      "project/contracts/TodoList.sol": {
        "content": "// SPDX-License-Identifier: MIT \r\npragma solidity >=0.4.22 <0.9.0; \r\ncontract TodoList { \r\nuint public taskCount = 0;\r\n struct Task { \r\n uint id; \r\n string taskname; \r\n bool status; \r\n } \r\n mapping(uint => Task) public tasks; \r\n event TaskCreated( \r\n uint id, \r\n string taskname, \r\n bool status \r\n ); \r\n event TaskStatus( \r\n uint id, \r\n bool status \r\n ); \r\n constructor() { \r\n createTask(\"Todo List Tutorial\"); \r\n } \r\n function createTask(string memory _taskname) public { \r\n taskCount ++; \r\n tasks[taskCount] = Task(taskCount, _taskname, false); \r\n emit TaskCreated(taskCount, _taskname, false); \r\n } \r\n function toggleStatus(uint _id) public { \r\n Task memory _task = tasks[_id];\r\n _task.status = !_task.status; \r\n tasks[_id] = _task; \r\n  emit TaskStatus(_id, _task.status); \r\n  } \r\n  }"
      }
    }
  }
}